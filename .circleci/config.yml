version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: nyankoye/oc_lettings_project
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  run_tests:
    docker:
      - image: circleci/python:3.9-bullseye-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Install Python dependencies
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV && source $BASH_ENV
            pip install --user -r requirements.txt
      - run:
          name: Run unit tests
          command: |
            python manage.py test
  build-docker:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-docker:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:$IMAGE_TAG
  deployment-to-heroku:
      machine: true
      steps:
        - checkout
        - run:
            name: Deployed Docker image in Heroku
            command: |
              - docker login --username=$DOCKERHUB_USERNAME --password=$(heroku auth:token) registry.heroku.com
              - docker tag $IMAGE_NAME:$IMAGE_TAG registry.heroku.com/$APP_NAME/web
              - docker push registry.heroku.com/$APP_NAME/web
workflows:
  docker-build-and-tests:
    jobs:
      - run_tests
      - build-docker:
          requires:
                - run_tests
          filters:
            branches:
              only: master
      - publish-docker:
          requires:
            - run_tests
            - build-docker
          filters:
            branches:
              only: master
      - deployment-to-heroku:
          requires:
            - publish-docker
          filters:
            branches:
              only: master
  docker-publish:
    jobs:
      - run_tests
      - build-docker:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-docker:
          requires:
            - run_tests
            - build-docker
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/