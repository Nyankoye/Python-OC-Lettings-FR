version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: nyankoye/app_circleci
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  run_tests:
    docker:
      - image: circleci/python:3.9-bullseye-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: Install Python dependencies
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV && source $BASH_ENV
            pip install --user -r requirements.txt
      - run:
          name: Run unit tests
          command: |
            python manage.py test
  build:
    executor: docker-publisher
    steps:
      - checkout
      - checkout
      - setup_remote_docker:
          #available on performance plan
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG
workflows:
  build-test:
    jobs:
      - run_tests
  docker-build:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - publish-tag:
          requires:
            - run_tests
            - build
          filters:
            branches:
              only: main
  docker-publish:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-tag:
          requires:
            - run_tests
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/